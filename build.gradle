/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
	id 'groovy'
	id 'org.springframework.boot' version '2.2.2.RELEASE'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
	maven {
        url = uri('https://repo1.maven.apache.org/maven2')
    }
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.2.2.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE'
    implementation 'org.projectlombok:lombok:1.18.10'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    runtimeOnly 'com.h2database:h2:1.4.200'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE'
    compileOnly 'org.springframework.boot:spring-boot-starter-tomcat:2.2.2.RELEASE'
	// https://mvnrepository.com/artifact/io.springfox/springfox-core
   compile group: 'io.springfox', name: 'springfox-core', version: '2.9.2'
   // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy
compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.13'
compileOnly 'org.projectlombok:lombok:1.18.12'
annotationProcessor 'org.projectlombok:lombok:1.18.12'


}

group = 'co.za.discovery.bank'
version = '1.0.0-SNAPSHOT'
description = 'discovery'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
